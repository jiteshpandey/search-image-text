#!/bin/bash

usage() { echo "Usage: $0 [-r -a DIRECTORY -s SEARCHTEXT ]" 1>&2; exit 1; }

export REMOVE=false;
export ADD=false;
export SEARCH=false;
export BPATH=${pwd}
export OPATH=`realpath ~/.pictext`
export LANG=""
export SEARCHFOR=""
export FILELIST=`mktemp`
while getopts ":ra:s:" o; do
 case "${o}" in
   r)
     REMOVE=true
   ;;
   a)
     if [ -z "$OPTARG" ]
     then
        usage
     fi
     ADD=true
     BPATH=${OPTARG}
     BPATH=`realpath $BPATH`
     if ! [ -d "$BPATH" ]
     then
      usage
     fi
   ;;
   s)
     if [ -n "$OPTARG" ]
     then
        usage
     fi
     SEARCH=true
     SEARCHFOR=${OPTARG}
   ;;
   *)
    usage
   ;;
 esac
done
shift $((OPTIND-1))

if [ $(echo "$LANG" | wc -c ) -lt 3 ]   # Language defaults to eng.
then
LANG='eng'
fi

if [ $(echo "$BPATH" | wc -c ) -lt 2 ]
then
BPATH=`pwd`
fi

if [ ! -d "$OPATH" ]; then
mkdir -pv "$OPATH"
fi

OIFS="$IFS"
IFS=$'\n'

if [ -f "$FILELIST.backup" ]; then
rm "$FILELIST.backup"
fi

find $OPATH -type f -name "*.txt" 2>&1 | grep -Po '.*(?=\.)' | sort -u | sed 's:'"$OPATH"':'"$HOME"':' > $FILELIST

if [ "$REMOVE" = true ]; then

RealPath=`realpath $HOME`

find $RealPath -not -path '*/\.*' -type f \( -name "*.docx" -or -name "*.doc" -or -name "*.xls" -or -name "*.xlsx" -or -name "*.odt" -or -name "*.ods" -or -name "*.pdf" -or -name "*.png" -or -name "*.jpg" -or -name "*.bmp" \) 2>&1 | sort -u > "$FILELIST.backup"
###REMOVE LOOP
for FILEPATH in `comm -2 -3 $FILELIST "$FILELIST.backup"`
do
echo "REMOVING"
dirpath=${FILEPATH#$HOME}
dir=${dirpath%/*}
outputfile=${FILEPATH##*/}
if [ -f "$OPATH/$dir/$outputfile.txt" ]; then
rm -r $OPATH/$dir/$outputfile.txt
fi
sed -i "s:$FILEPATH::g" $FILELIST
sed -i '/^\s*$/d' $FILELIST
done

fi

if [ "$ADD" = true ]; then
RealPath=`realpath $BPATH`

find $RealPath -not -path '*/\.*' -type f \( -name "*.docx" -or -name "*.doc" -or -name "*.xls" -or -name "*.xlsx" -or -name "*.odt" -or -name "*.ods" -or -name "*.pdf" -or -name "*.png" -or -name "*.jpg" -or -name "*.bmp" \) 2>&1 | sort -u > "$FILELIST.backup"


##ADDITION LOOP
aadlist=1
totallist=`comm -2 -3 "$FILELIST.backup" $FILELIST | wc -l`
for FILEPATH in `comm -2 -3 "$FILELIST.backup" $FILELIST`
do
        ((addlist++))
	echo "ADDING $addlist of $totallist"
	dirpath=${FILEPATH#$HOME}
	dir=${dirpath%/*}
	outputfile=${FILEPATH##*/}
	mkdir -p $OPATH/$dir
	if [ ! -f "$FILEPATH" ]; then
	echo 'File not there, aborting.'
	exit
	fi

	OUTFILE=$OPATH/$dir/$outputfile

	case "$FILEPATH" in
	*.jpg | *.png | *.bmp)
	convert -colorspace gray -resize 3000x -units PixelsPerInch "$FILEPATH" /tmp/temp.png > /dev/null 2>&1
	tesseract /tmp/temp.png "$OUTFILE" -l $LANG > /dev/null 2>&1
	rm /tmp/temp.png
	;;

	*.xls | *.xlsx)
	ssconvert "$FILEPATH" "$OUTFILE".txt > /dev/null 2>&1
	;;

	*.odt | *.ods)
	odt2txt "$FILEPATH" > "$OUTFILE".txt
	;;

	*.doc)
	catdoc "$FILEPATH" > "$OUTFILE".txt
	;;

	*.docx)
	docx2txt "$FILEPATH" "$OUTFILE".txt > /dev/null 2>&1
	;;

	*.pdf)
	temp_pic=$(mktemp -d /tmp/searchtext-XXXXXX)
	temp_txt=$(mktemp -d /tmp/searchtext-XXXXXX)
	convert -colorspace gray -resize 3000x -units PixelsPerInch "$FILEPATH" $temp_pic/image.png > /dev/null 2>&1
	for tpic in $(find $temp_pic -type f -name "*.png" | sort -t '-' -k2 -n)
	do
	 tesseract $tpic $temp_txt/$(basename $tpic) -l $LANG > /dev/null 2>&1
	done

	for ttext in $(find $temp_txt -type f -name "*.txt" | sort -t '-' -k2 -n)
	do
	 cat $ttext >> "$OUTFILE".txt
	done
	rm -r $temp_txt $temp_pic
	;;

	esac
done
fi

if [ "$SEARCH" = true ]; then
	dirpath=${BPATH#$HOME}
	if [ -d $dirpath ]; then
	filelist=`grep -lri $2 ~/.pictext/$dirpath | grep -Po '.*(?=\.)' | sed 's:'"$HOME/.pictext"':'"$HOME/"':'`
	elif [ -f $dirpath ]; then
	filelist=`grep -ri $2 ~/.pictext/$dirpath | grep -Po '.*(?=\.)' | sed 's:'"$HOME/.pictext"':'"$HOME/"':'`
	fi

	imgfile="";
	for inline in $filelist
	do
	imgfile+="<img src='file://$inline'>"
	done

	echo "
	<html>
	<head>
	<style> img { padding: 0.5rem; width: 10rem; display: inline-block; } </style>
	<title>Search result for $2</title>
	<body>
	$imgfile
	</body>
	</head>
	</html>
	" > /tmp/searchresult.html
	xdg-open /tmp/searchresult.html  > /dev/null 2>&1
fi
